---
import Layout from '@layouts/Layout.astro'
import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'
import Datetime from '@components/Datetime.astro'
import TopButton from '@components/TopButton.astro'
import type { CollectionEntry } from 'astro:content'
import { slugifyStr } from '@utils/slugify'

export interface Props {
  post: CollectionEntry<'lyrics'>
}

const { post } = Astro.props

const { title, author, pubDatetime, modDatetime, youtube, comment, lang } =
  post.data

const { Content } = await post.render()

const ogImage = new URL(`/lyrics/${post.slug}.png`, Astro.url.origin).href

const layoutProps = {
  title: `${author} - ${title}`,
  description: `${author} - ${title} 가사 번역`,
  author,
  pubDatetime,
  modDatetime,
  ogImage,
}
---

<Layout {...layoutProps}>
  <Header activeNav="lyrics" transition:persist />
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button
      class="focus-outline mt-8 mb-2 flex hover:opacity-75"
      onclick="history.back()"
    >
      <svg xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>뒤로 가기</span>
    </button>
  </div>
  <main id="main-content">
    <h1 transition:name={slugifyStr(title)} class="post-title">
      {author} - {title}
    </h1>
    <Datetime
      pubDatetime={pubDatetime}
      modDatetime={modDatetime}
      size="lg"
      className="my-2"
    />
    <article
      id="article"
      role="article"
      class="prose mx-auto mt-8 flex max-w-3xl flex-col items-center text-center"
    >
      {
        lang && (
          <div class="sticky top-0 flex gap-1 self-end rounded-b-md bg-[var(--color-fill)] px-2 text-2xl select-none">
            {lang.includes('ja') && (
              <div>
                <input type="checkbox" id="ja" name="ja" checked />
                <label for="ja" class="checked">
                  あ
                </label>
              </div>
            )}
            {lang.includes('yomigana') && (
              <div>
                <input type="checkbox" id="yomigana" name="yomigana" checked />
                <label for="yomigana" class="checked">
                  読み
                </label>
              </div>
            )}
            {lang.includes('ko-transliteration') && (
              <div>
                <input type="checkbox" id="ko-tl" name="ko-tl" checked />
                <label for="ko-tl" class="checked">
                  발음
                </label>
              </div>
            )}
            {lang.includes('ko') && (
              <div>
                <input type="checkbox" id="ko" name="ko" checked />
                <label for="ko" class="checked">
                  가
                </label>
              </div>
            )}
          </div>
        )
      }
      <p><a href={youtube} target="_blank">youtube</a></p>
      <div
        id="lyrics"
        class="flex flex-col gap-4 text-lg text-[var(--color-text-base)]"
      >
        <Content />
      </div>
    </article>
    <div class="flex justify-end">
      <TopButton />
    </div>
    {
      comment && (
        <script
          is:inline
          src="https://giscus.kiwiyou.dev/client.js"
          data-repo="kiwiyou/new-blog"
          data-repo-id="R_kgDOGoQLHw"
          data-category="댓글"
          data-category-id="DIC_kwDOGoQLH84CcGYV"
          data-mapping="og:title"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="bottom"
          data-theme="dark"
          data-lang="ko"
          data-loading="lazy"
          crossorigin="anonymous"
          async
        />
      )
    }
  </main>
  <Footer />
</Layout>

<style>
  @reference "../styles/base.css";

  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  #article > * {
    @apply max-w-full;
  }
  .post-title {
    @apply text-2xl font-semibold text-balance break-keep text-[var(--color-accent)];
  }
  :global(ruby) {
    ruby-align: center;
  }
  :global(rt) {
    @apply text-xs;
  }
  input {
    display: none;
  }
  :global(.checked) {
    color: var(--color-accent);
  }
  label {
    @apply cursor-pointer;
  }
  :global(.lang-ja) {
    @apply font-sans-jp;
  }
  :global(.hide-ja) :global(.lang-ja),
  :global(.hide-ko) :global(.lang-ko),
  :global(.hide-ko-tl) :global(.lang-ko-tl),
  :global(.hide-yomigana) :global(rt:not(.show)) {
    display: none;
  }
</style>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const lyrics = document.getElementById('lyrics')
    for (const input of document.querySelectorAll('input[type="checkbox"]')) {
      input.addEventListener('change', () => {
        if (input.checked) {
          input.nextElementSibling.classList.add('checked')
          lyrics.classList.remove(`hide-${input.id}`)
        } else {
          input.nextElementSibling.classList.remove('checked')
          lyrics.classList.add(`hide-${input.id}`)
        }
      })
    }
  })
</script>
