---
import { LOCALE } from '@config'

interface Props {
  pubDatetime: string | Date
  modDatetime?: string | Date
  size?: 'sm' | 'lg'
  className?: string
}

const { pubDatetime, modDatetime, size = 'sm', className } = Astro.props

const myDatetime = new Date(modDatetime ? modDatetime : pubDatetime)
const date = myDatetime.toLocaleDateString(LOCALE.langTag, {
  year: 'numeric',
  month: 'short',
  day: 'numeric',
})
---

<div class={`flex items-center space-x-2 opacity-80 ${className}`}>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class={`${
      size === 'sm' ? 'scale-90' : 'scale-100'
    } inline-block h-6 w-6 min-w-[1.375rem] fill-[var(--color-text-base)]`}
    aria-hidden="true"
  >
    <path
      d="M7 11h2v2H7zm0 4h2v2H7zm4-4h2v2h-2zm0 4h2v2h-2zm4-4h2v2h-2zm0 4h2v2h-2z"
    ></path>
    <path
      d="M5 22h14c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2h-2V2h-2v2H9V2H7v2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zM19 8l.001 12H5V8h14z"
    ></path>
  </svg>
  {
    modDatetime ? (
      <span class={`italic ${size === 'sm' ? 'text-sm' : 'text-base'}`}>
        수정
      </span>
    ) : (
      <span class="sr-only">작성</span>
    )
  }
  <span class={`italic ${size === 'sm' ? 'text-sm' : 'text-base'}`}>
    <time datetime={myDatetime.toISOString()}>{date}</time>
  </span>
</div>
