---
import { type CollectionEntry, getCollection } from 'astro:content';
import getSortedPosts from '@utils/getSortedPosts';
import getPageNumbers from '@utils/getPageNumbers';
import getPagination from '@utils/getPagination';
import LyricsDetails from '@layouts/LyricsDetails.astro';
import Lyrics from '@layouts/Lyrics.astro';

export interface Props {
  post: CollectionEntry<'lyrics'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('lyrics');

  const postResult = posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map((pageNum) => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection('lyrics');

const sortedPosts = getSortedPosts(posts);

const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

{post ? <LyricsDetails post={post} /> : <Lyrics {...pagination} />}
